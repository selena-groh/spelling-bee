{"version":3,"sources":["Letter.js","Button.js","InputtedLetters.js","utils.js","Board.js","App.js","index.js"],"names":["Letter","letter","onClick","isRequired","className","cx","Button","props","children","InputtedLetters","input","letterOptions","map","inputtedLetter","index","includes","toLowerCase","ALPHABET","Board","useState","setInput","setLetterOptions","useEffect","tempLetterOptions","i","randomLetter","Math","floor","random","length","push","deleteLetter","slice","shuffleLetters","array","j","temp","shuffleArray","onKeyDown","e","key","String","fromCharCode","keyCode","match","tabIndex","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8UAeeA,EAZA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACjC,OACE,wBAAQC,UAAU,SAASF,QAASA,EAApC,SACE,qBACEE,UAAWC,IAAG,aAAc,CAAE,yBAA0BF,IAD1D,SAGE,sBAAMC,UAAU,gBAAhB,SAAiCH,S,OCC1BK,G,MARA,SAACC,GACd,OACE,gDAAQH,UAAU,UAAaG,GAA/B,aACGA,EAAMC,cCmBEC,G,MArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OACtB,qBAAKP,UAAU,kBAAf,SACE,sBAAMA,UAAU,wBAAhB,SACG,YAAIM,GAAOE,KAAI,SAACC,EAAgBC,GAAjB,OACd,sBAEEV,UAAWC,IAAG,8BAA+B,CAC3C,wCAAyCM,EAAcI,SACrDF,EAAeG,eAEjB,wCACEH,IAAmBF,EAAc,KAPvC,SAUGE,GAVH,UACUA,EADV,YAC4BC,aCE9BG,EAAW,6BCwDFC,EAzDD,WACZ,MAA0BC,mBAAS,IAAnC,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAA0CD,mBAAS,IAAnD,mBAAOR,EAAP,KAAsBU,EAAtB,KAGAC,qBAAU,WAER,IADA,IAAMC,EAAoB,GACjBC,EAAI,EAAGA,GATA,EASkBA,IAAK,CACrC,IAAIC,EAAe,GACnB,GACEA,EDNNR,EAASS,KAAKC,MAAMD,KAAKE,SAAWX,EAASY,eCOhCN,EAAkBR,SAASU,IACpCF,EAAkBO,KAAKL,GAEzBJ,EAAiBE,KAChB,IAEH,IAAMQ,EAAe,kBAAMX,EAASV,EAAMsB,MAAM,GAAI,KAE9CC,EAAiB,kBACrBZ,EAAiB,CACfV,EAAc,IADA,mBD7BQ,SAACuB,GAC3B,IAAK,IAAIV,EAAIU,EAAML,OAAS,EAAGL,EAAI,EAAGA,IAAK,CACzC,IAAMW,EAAIT,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IACpCY,EAAOF,EAAMV,GACnBU,EAAMV,GAAKU,EAAMC,GACjBD,EAAMC,GAAKC,EAEb,OAAO,YAAIF,GCwBJG,CAAa1B,EAAcqB,MAAM,QAaxC,OACE,sBAAK5B,UAAU,QAAQkC,UAXH,SAACC,GACP,cAAVA,EAAEC,IACJT,IACmB,MAAVQ,EAAEC,IACXP,IACSQ,OAAOC,aAAaH,EAAEI,SAASC,MAAM,mBAC9CxB,EAAS,GAAD,OAAIV,GAAJ,OAAY6B,EAAEC,OAKyBK,SAAS,KAA1D,UACE,cAAC,EAAD,CAAiBnC,MAAOA,EAAOC,cAAeA,IAC9C,qBAAKP,UAAU,cAAf,SACGO,EAAcC,KAAI,SAACX,EAAQa,GAAT,OACjB,cAAC,EAAD,CAEEX,WAAsB,IAAVW,EACZb,OAAQA,EACRC,QAAS,kBAAMkB,EAAS,GAAD,OAAIV,GAAJ,OAAYT,MAJrC,UACUA,EADV,YACoBa,SAOxB,sBAAKV,UAAU,gBAAf,UACE,cAAC,EAAD,CAAQF,QAAS+B,EAAjB,qBACA,cAAC,EAAD,CAAQ/B,QAAS6B,EAAjB,oBACA,cAAC,EAAD,CAAQ7B,QAAS,kBAAMkB,EAAS,KAAhC,0BC/CO0B,MAVf,WACE,OACE,sBAAK1C,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,0BACA,mBAAGA,UAAU,eAAb,sDACA,cAAC,EAAD,QCFA2C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.4db9cc22.chunk.js","sourcesContent":["import \"./Letter.scss\";\nimport cx from \"classnames\";\n\nconst Letter = ({ letter, onClick, isRequired }) => {\n  return (\n    <button className=\"Letter\" onClick={onClick}>\n      <div\n        className={cx(\"Letter-hex\", { \"Letter-hex--isRequired\": isRequired })}\n      >\n        <span className=\"Letter-letter\">{letter}</span>\n      </div>\n    </button>\n  );\n};\n\nexport default Letter;\n","import \"./Button.scss\";\n\nconst Button = (props) => {\n  return (\n    <button className=\"Button\" {...props}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import \"./InputtedLetters.scss\";\nimport cx from \"classnames\";\n\nconst InputtedLetters = ({ input, letterOptions }) => (\n  <div className=\"InputtedLetters\">\n    <span className=\"InputtedLetters-input\">\n      {[...input].map((inputtedLetter, index) => (\n        <span\n          key={`${inputtedLetter}-${index}`}\n          className={cx(\"InputtedLetters-inputLetter\", {\n            \"InputtedLetters-inputLetter--invalid\": !letterOptions.includes(\n              inputtedLetter.toLowerCase()\n            ),\n            \"InputtedLetters-inputLetter--required\":\n              inputtedLetter === letterOptions[0]\n          })}\n        >\n          {inputtedLetter}\n        </span>\n      ))}\n    </span>\n  </div>\n);\n\nexport default InputtedLetters;\n","export const shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return [...array];\n};\n\nconst ALPHABET = \"abcdefghijklmnopqrstuvwxyz\";\n\nexport const generateRandomCharacter = () =>\n  ALPHABET[Math.floor(Math.random() * ALPHABET.length)];\n","import { useEffect, useState } from \"react\";\nimport \"./Board.scss\";\nimport Letter from \"./Letter\";\nimport Button from \"./Button\";\nimport InputtedLetters from \"./InputtedLetters\";\nimport { shuffleArray, generateRandomCharacter } from \"./utils\";\n\nconst NUM_LETTERS = 7;\n\nconst Board = () => {\n  const [input, setInput] = useState(\"\");\n  const [letterOptions, setLetterOptions] = useState([]);\n\n  // Runs once on initial page load to determine the letter options\n  useEffect(() => {\n    const tempLetterOptions = [];\n    for (var i = 1; i <= NUM_LETTERS; i++) {\n      let randomLetter = \"\";\n      do {\n        randomLetter = generateRandomCharacter();\n      } while (tempLetterOptions.includes(randomLetter));\n      tempLetterOptions.push(randomLetter);\n    }\n    setLetterOptions(tempLetterOptions);\n  }, []);\n\n  const deleteLetter = () => setInput(input.slice(0, -1));\n\n  const shuffleLetters = () =>\n    setLetterOptions([\n      letterOptions[0],\n      ...shuffleArray(letterOptions.slice(1))\n    ]);\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Backspace\") {\n      deleteLetter();\n    } else if (e.key === \" \") {\n      shuffleLetters();\n    } else if (String.fromCharCode(e.keyCode).match(/([A-Z]|[a-z])/g)) {\n      setInput(`${input}${e.key}`);\n    }\n  };\n\n  return (\n    <div className=\"Board\" onKeyDown={handleKeyDown} tabIndex=\"-1\">\n      <InputtedLetters input={input} letterOptions={letterOptions} />\n      <div className=\"Board-cells\">\n        {letterOptions.map((letter, index) => (\n          <Letter\n            key={`${letter}-${index}`}\n            isRequired={index === 0}\n            letter={letter}\n            onClick={() => setInput(`${input}${letter}`)}\n          />\n        ))}\n      </div>\n      <div className=\"Board-actions\">\n        <Button onClick={shuffleLetters}>Shuffle</Button>\n        <Button onClick={deleteLetter}>Delete</Button>\n        <Button onClick={() => setInput(\"\")}>Clear</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import \"./App.scss\";\nimport Board from \"./Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-title\">Spelling Bee</h1>\n      <p className=\"App-subtitle\">A NYT Spelling Bee remake, just for fun!</p>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.scss\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}