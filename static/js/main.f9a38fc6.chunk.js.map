{"version":3,"sources":["Cell.js","Button.js","Board.js","App.js","index.js"],"names":["Cell","letter","onClick","className","Button","props","children","initialLetterOptions","Board","useState","input","setInput","letterOptions","setLetterOptions","deleteLetter","slice","onKeyDown","e","key","String","fromCharCode","keyCode","match","tabIndex","map","inputtedLetter","index","cx","includes","toLowerCase","array","i","length","j","Math","floor","random","temp","shuffleArray","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4SAYeA,EAVF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACtB,OACE,wBAAQC,UAAU,aAAaD,QAASA,EAAxC,SACE,qBAAKC,UAAU,WAAf,SACE,sBAAMA,UAAU,cAAhB,SAA+BF,S,OCIxBG,G,MARA,SAACC,GACd,OACE,gDAAQF,UAAU,UAAaE,GAA/B,aACGA,EAAMC,c,gBCCPC,EAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KA+D5DC,EAnDD,WACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAASF,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEMC,EAAe,kBAAMH,EAASD,EAAMK,MAAM,GAAI,KASpD,OACE,sBAAKZ,UAAU,QAAQa,UARH,SAACC,GACP,cAAVA,EAAEC,IACJJ,IACSK,OAAOC,aAAaH,EAAEI,SAASC,MAAM,mBAC9CX,EAAS,GAAD,OAAID,GAAJ,OAAYO,EAAEC,OAIyBK,SAAS,KAA1D,UACE,qBAAKpB,UAAU,qBAAf,SACE,sBAAMA,UAAU,cAAhB,SACG,YAAIO,GAAOc,KAAI,SAACC,EAAgBC,GAAjB,OACd,sBAEEvB,UAAWwB,IAAG,oBAAqB,CACjC,8BAA+Bf,EAAcgB,SAC3CH,EAAeI,iBAJrB,SAQGJ,GARH,UACUA,EADV,YAC4BC,WAYlC,qBAAKvB,UAAU,cAAf,SACGS,EAAcY,KAAI,SAACvB,EAAQyB,GAAT,OACjB,cAAC,EAAD,CAEEzB,OAAQA,EACRC,QAAS,kBAAMS,EAAS,GAAD,OAAID,GAAJ,OAAYT,MAHrC,UACUA,EADV,YACoByB,SAMxB,sBAAKvB,UAAU,gBAAf,UACE,cAAC,EAAD,CAAQD,QAAS,kBAAMW,EAnDV,SAACiB,GACpB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAO,YAAIP,GA4CmCQ,CAAa1B,KAArD,qBAGA,cAAC,EAAD,CAAQV,QAASY,EAAjB,oBACA,cAAC,EAAD,CAAQZ,QAAS,kBAAMS,EAAS,KAAhC,0BC5DO,SAAS4B,IACtB,OACE,sBAAKpC,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,0BACA,mBAAGA,UAAU,eAAb,sDACA,cAAC,EAAD,OCFN,IAAMqC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.f9a38fc6.chunk.js","sourcesContent":["import \"./Cell.scss\";\n\nconst Cell = ({ letter, onClick }) => {\n  return (\n    <button className=\"Cell plain\" onClick={onClick}>\n      <div className=\"Cell-hex\">\n        <span className=\"Cell-letter\">{letter}</span>\n      </div>\n    </button>\n  );\n};\n\nexport default Cell;\n","import \"./Button.scss\";\n\nconst Button = (props) => {\n  return (\n    <button className=\"Button\" {...props}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import \"./Board.scss\";\nimport Cell from \"./Cell\";\nimport Button from \"./Button\";\nimport { useState } from \"react\";\nimport cx from \"classnames\";\n\nconst initialLetterOptions = [\"h\", \"e\", \"l\", \"l\", \"o\", \"w\", \"o\", \"r\", \"l\", \"d\"];\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return [...array];\n};\n\nconst Board = () => {\n  const [input, setInput] = useState(\"\");\n  const [letterOptions, setLetterOptions] = useState(initialLetterOptions);\n\n  const deleteLetter = () => setInput(input.slice(0, -1));\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Backspace\") {\n      deleteLetter();\n    } else if (String.fromCharCode(e.keyCode).match(/([A-Z]|[a-z])/g)) {\n      setInput(`${input}${e.key}`);\n    }\n  };\n  return (\n    <div className=\"Board\" onKeyDown={handleKeyDown} tabIndex=\"-1\">\n      <div className=\"Board-inputWrapper\">\n        <span className=\"Board-input\">\n          {[...input].map((inputtedLetter, index) => (\n            <span\n              key={`${inputtedLetter}-${index}`}\n              className={cx(\"Board-inputLetter\", {\n                \"Board-inputLetter--invalid\": !letterOptions.includes(\n                  inputtedLetter.toLowerCase()\n                )\n              })}\n            >\n              {inputtedLetter}\n            </span>\n          ))}\n        </span>\n      </div>\n      <div className=\"Board-cells\">\n        {letterOptions.map((letter, index) => (\n          <Cell\n            key={`${letter}-${index}`}\n            letter={letter}\n            onClick={() => setInput(`${input}${letter}`)}\n          />\n        ))}\n      </div>\n      <div className=\"Board-actions\">\n        <Button onClick={() => setLetterOptions(shuffleArray(letterOptions))}>\n          Shuffle\n        </Button>\n        <Button onClick={deleteLetter}>Delete</Button>\n        <Button onClick={() => setInput(\"\")}>Clear</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import \"./App.scss\";\nimport Board from \"./Board\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-title\">Spelling Bee</h1>\n      <p className=\"App-subtitle\">A NYT Spelling Bee remake, just for fun!</p>\n      <Board />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.scss\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}